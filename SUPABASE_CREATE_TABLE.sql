-- ============================================
-- T·∫†O B·∫¢NG SHARED_QUIZZES T·ª™ ƒê·∫¶U
-- ============================================
-- CH·ªà CH·∫†Y FILE N√ÄY N·∫æU B·∫¢NG CH∆ØA T·ªíN T·∫†I
-- N·∫øu b·∫£ng ƒë√£ c√≥ r·ªìi, b·ªè qua file n√†y v√† ch·∫°y SUPABASE_SETUP_COMPLETE.sql
-- ============================================

-- ============================================
-- B∆Ø·ªöC 1: X√ìA B·∫¢NG C≈® (N·∫æU C·∫¶N B·∫ÆT ƒê·∫¶U L·∫†I)
-- ============================================
-- ‚ö†Ô∏è C·∫¢NH B√ÅO: L·ªánh n√†y s·∫Ω X√ìA T·∫§T C·∫¢ D·ªÆ LI·ªÜU!
-- Ch·ªâ uncomment n·∫øu b·∫°n ch·∫Øc ch·∫Øn mu·ªën x√≥a b·∫£ng c≈©

-- DROP TABLE IF EXISTS shared_quizzes CASCADE;

-- ============================================
-- B∆Ø·ªöC 2: T·∫†O B·∫¢NG SHARED_QUIZZES
-- ============================================

CREATE TABLE IF NOT EXISTS shared_quizzes (
    -- ID t·ª± ƒë·ªông t·∫°o
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    
    -- Th√¥ng tin b√†i thi
    title TEXT NOT NULL,
    description TEXT,
    questions JSONB NOT NULL,
    total_questions INTEGER NOT NULL,
    
    -- Th√¥ng tin ng∆∞·ªùi chia s·∫ª
    user_name TEXT NOT NULL,
    
    -- Th·ªùi gian
    shared_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    
    -- Th·ªëng k√™
    views INTEGER DEFAULT 0,
    attempts INTEGER DEFAULT 0,
    likes INTEGER DEFAULT 0,
    
    -- Metadata
    original_id TEXT,
    tags TEXT[],
    difficulty TEXT DEFAULT 'medium',
    category TEXT DEFAULT 'general',
    
    -- Constraints
    CONSTRAINT valid_total_questions CHECK (total_questions > 0),
    CONSTRAINT valid_views CHECK (views >= 0),
    CONSTRAINT valid_attempts CHECK (attempts >= 0),
    CONSTRAINT valid_likes CHECK (likes >= 0)
);

-- ============================================
-- B∆Ø·ªöC 3: T·∫†O INDEX ƒê·ªÇ TƒÇNG T·ªêC ƒê·ªò
-- ============================================

CREATE INDEX IF NOT EXISTS idx_shared_quizzes_shared_at 
ON shared_quizzes(shared_at DESC);

CREATE INDEX IF NOT EXISTS idx_shared_quizzes_views 
ON shared_quizzes(views DESC);

CREATE INDEX IF NOT EXISTS idx_shared_quizzes_category 
ON shared_quizzes(category);

CREATE INDEX IF NOT EXISTS idx_shared_quizzes_difficulty 
ON shared_quizzes(difficulty);

CREATE INDEX IF NOT EXISTS idx_shared_quizzes_user_name 
ON shared_quizzes(user_name);

-- ============================================
-- B∆Ø·ªöC 4: B·∫¨T ROW LEVEL SECURITY (RLS)
-- ============================================

ALTER TABLE shared_quizzes ENABLE ROW LEVEL SECURITY;

-- ============================================
-- B∆Ø·ªöC 5: T·∫†O POLICIES
-- ============================================

-- Cho ph√©p ƒë·ªçc
CREATE POLICY "Allow public read access" 
ON shared_quizzes
FOR SELECT 
USING (true);

-- Cho ph√©p t·∫°o m·ªõi
CREATE POLICY "Allow public insert access" 
ON shared_quizzes
FOR INSERT 
WITH CHECK (true);

-- Cho ph√©p c·∫≠p nh·∫≠t
CREATE POLICY "Allow public update stats" 
ON shared_quizzes
FOR UPDATE 
USING (true)
WITH CHECK (true);

-- Cho ph√©p x√≥a
CREATE POLICY "Allow public delete access" 
ON shared_quizzes
FOR DELETE 
USING (true);

-- ============================================
-- B∆Ø·ªöC 6: T·∫†O FUNCTION T·ª∞ ƒê·ªòNG C·∫¨P NH·∫¨T UPDATED_AT
-- ============================================

CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- ============================================
-- B∆Ø·ªöC 7: T·∫†O TRIGGER T·ª∞ ƒê·ªòNG C·∫¨P NH·∫¨T UPDATED_AT
-- ============================================

DROP TRIGGER IF EXISTS update_shared_quizzes_updated_at ON shared_quizzes;

CREATE TRIGGER update_shared_quizzes_updated_at
    BEFORE UPDATE ON shared_quizzes
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

-- ============================================
-- B∆Ø·ªöC 8: KI·ªÇM TRA K·∫æT QU·∫¢
-- ============================================

-- Xem c·∫•u tr√∫c b·∫£ng
SELECT 
    column_name AS "T√™n c·ªôt",
    data_type AS "Ki·ªÉu d·ªØ li·ªáu",
    is_nullable AS "Cho ph√©p NULL",
    column_default AS "Gi√° tr·ªã m·∫∑c ƒë·ªãnh"
FROM information_schema.columns
WHERE table_name = 'shared_quizzes'
ORDER BY ordinal_position;

-- Xem c√°c policies
SELECT 
    policyname AS "Policy Name",
    cmd AS "Command"
FROM pg_policies
WHERE tablename = 'shared_quizzes'
ORDER BY cmd;

-- Xem RLS status
SELECT 
    tablename AS "Table",
    rowsecurity AS "RLS Enabled"
FROM pg_tables
WHERE tablename = 'shared_quizzes';

-- ============================================
-- HO√ÄN TH√ÄNH! üéâ
-- ============================================
-- B·∫£ng shared_quizzes ƒë√£ ƒë∆∞·ª£c t·∫°o v·ªõi:
-- ‚úÖ T·∫•t c·∫£ c√°c c·ªôt c·∫ßn thi·∫øt
-- ‚úÖ Index ƒë·ªÉ tƒÉng t·ªëc ƒë·ªô
-- ‚úÖ RLS ƒë∆∞·ª£c b·∫≠t
-- ‚úÖ 4 policies (SELECT, INSERT, UPDATE, DELETE)
-- ‚úÖ Trigger t·ª± ƒë·ªông c·∫≠p nh·∫≠t updated_at
-- 
-- B√¢y gi·ªù b·∫°n c√≥ th·ªÉ s·ª≠ d·ª•ng ·ª©ng d·ª•ng!
-- ============================================
