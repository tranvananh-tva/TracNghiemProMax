// ‚≠ê SCRIPT T·ª∞ ƒê·ªòNG S·ª¨A L·ªñI X√ìA B√ÄI CHO ADMIN
// Ch·∫°y script n√†y trong Console (F12) ƒë·ªÉ t·ª± ƒë·ªông patch explore-quiz.js

(function() {
    console.log('üîß B·∫Øt ƒë·∫ßu patch explore-quiz.js...');
    
    // Ki·ªÉm tra xem ExploreQuizManager c√≥ t·ªìn t·∫°i kh√¥ng
    if (!window.ExploreQuizManager) {
        console.error('‚ùå ExploreQuizManager kh√¥ng t·ªìn t·∫°i!');
        return;
    }
    
    // ‚≠ê PATCH H√ÄM deleteSharedQuiz
    window.ExploreQuizManager.prototype.deleteSharedQuiz = async function(quizId) {
        if (!quizId) {
            return {
                success: false,
                message: 'Quiz ID kh√¥ng h·ª£p l·ªá'
            };
        }

        try {
            console.log('üóëÔ∏è Starting delete process for quiz:', quizId);
            
            let deleteSuccess = false;
            let deleteMethod = '';
            
            // ‚≠ê B∆Ø·ªöC 1: Th·ª≠ x√≥a t·ª´ Supabase tr∆∞·ªõc (n·∫øu c√≥)
            if (this.isSupabaseAvailable && window.supabaseQuizManager) {
                try {
                    console.log('‚òÅÔ∏è Attempting to delete from Supabase...');
                    const result = await window.supabaseQuizManager.deleteQuiz(quizId);
                    
                    if (result && result.success) {
                        deleteSuccess = true;
                        deleteMethod = 'Supabase';
                        console.log('‚úÖ Deleted from Supabase successfully');
                    } else {
                        console.warn('‚ö†Ô∏è Supabase delete failed:', result?.error);
                    }
                } catch (error) {
                    console.warn('‚ö†Ô∏è Supabase delete error:', error.message);
                }
            }
            
            // ‚≠ê B∆Ø·ªöC 2: Th·ª≠ x√≥a t·ª´ Local Server (n·∫øu Supabase th·∫•t b·∫°i ho·∫∑c kh√¥ng c√≥)
            if (!deleteSuccess && this.isServerOnline) {
                try {
                    console.log('üñ•Ô∏è Attempting to delete from Local Server...');
                    
                    const controller = new AbortController();
                    const timeoutId = setTimeout(() => controller.abort(), 10000);
                    
                    const response = await fetch(`${this.API_BASE_URL}/shared-quizzes/${quizId}`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        signal: controller.signal
                    });
                    
                    clearTimeout(timeoutId);
                    
                    if (response.ok) {
                        const data = await response.json();
                        
                        if (data.success) {
                            deleteSuccess = true;
                            deleteMethod = 'Local Server';
                            console.log('‚úÖ Deleted from Local Server successfully');
                        } else {
                            console.warn('‚ö†Ô∏è Local Server delete failed:', data.error);
                        }
                    } else {
                        console.warn('‚ö†Ô∏è Local Server response not OK:', response.status);
                    }
                } catch (error) {
                    console.warn('‚ö†Ô∏è Local Server delete error:', error.message);
                }
            }
            
            // ‚≠ê B∆Ø·ªöC 3: X√≥a t·ª´ Offline Storage (lu√¥n th·ª±c hi·ªán)
            try {
                console.log('üì± Deleting from offline storage...');
                const offlineQuizzes = JSON.parse(localStorage.getItem('offlineSharedQuizzes') || '[]');
                const filteredQuizzes = offlineQuizzes.filter(q => q.id !== quizId);
                
                if (filteredQuizzes.length < offlineQuizzes.length) {
                    localStorage.setItem('offlineSharedQuizzes', JSON.stringify(filteredQuizzes));
                    console.log('‚úÖ Deleted from offline storage');
                }
            } catch (error) {
                console.warn('‚ö†Ô∏è Offline storage delete error:', error.message);
            }
            
            // ‚≠ê B∆Ø·ªöC 4: X√≥a kh·ªèi danh s√°ch hi·ªán t·∫°i
            const originalLength = this.sharedQuizzes.length;
            this.sharedQuizzes = this.sharedQuizzes.filter(q => q.id !== quizId);
            
            if (this.sharedQuizzes.length < originalLength) {
                console.log('‚úÖ Removed from current list');
            }
            
            // ‚≠ê B∆Ø·ªöC 5: C·∫≠p nh·∫≠t UI
            this.renderSharedQuizzes(this.sharedQuizzes);
            
            // ‚≠ê B∆Ø·ªöC 6: X√≥a card kh·ªèi DOM (n·∫øu c√≤n t·ªìn t·∫°i)
            const quizCard = document.querySelector(`[data-quiz-id="${quizId}"]`);
            if (quizCard) {
                quizCard.style.animation = 'fadeOut 0.3s ease-out';
                setTimeout(() => {
                    quizCard.remove();
                }, 300);
            }
            
            // ‚≠ê K·∫æT QU·∫¢
            if (deleteSuccess) {
                return {
                    success: true,
                    message: `ƒê√£ x√≥a b√†i th√†nh c√¥ng t·ª´ ${deleteMethod}!`
                };
            } else {
                // N·∫øu kh√¥ng x√≥a ƒë∆∞·ª£c t·ª´ server nh∆∞ng ƒë√£ x√≥a local
                return {
                    success: true,
                    message: 'ƒê√£ x√≥a b√†i kh·ªèi thi·∫øt b·ªã n√†y. L∆∞u √Ω: B√†i c√≥ th·ªÉ v·∫´n c√≤n tr√™n server.'
                };
            }
            
        } catch (error) {
            console.error('‚ùå Error in deleteSharedQuiz:', error);
            return {
                success: false,
                message: `L·ªói khi x√≥a b√†i: ${error.message}`
            };
        }
    };
    
    // ‚≠ê PATCH H√ÄM confirmDeleteQuiz (n·∫øu ch∆∞a c√≥)
    if (!window.ExploreQuizManager.prototype.confirmDeleteQuiz) {
        window.ExploreQuizManager.prototype.confirmDeleteQuiz = async function(quizId) {
            document.querySelector('.quiz-action-menu')?.remove();
            
            try {
                let quiz = this.sharedQuizzes.find(q => q.id === quizId);
                
                if (!quiz) {
                    if (this.isSupabaseAvailable && window.supabaseQuizManager) {
                        const result = await window.supabaseQuizManager.getQuizById(quizId);
                        if (result.success) {
                            quiz = result.quiz;
                        }
                    } else if (this.isServerOnline) {
                        const response = await fetch(`${this.API_BASE_URL}/shared-quizzes/${quizId}`);
                        const data = await response.json();
                        if (data.success) {
                            quiz = data.quiz;
                        }
                    }
                }
                
                if (!quiz) {
                    if (window.quizManager && window.quizManager.showToast) {
                        window.quizManager.showToast('Kh√¥ng t√¨m th·∫•y quiz!', 'error');
                    }
                    return;
                }
                
                if (!this.isQuizOwner(quiz)) {
                    if (window.quizManager && window.quizManager.showToast) {
                        window.quizManager.showToast('B·∫°n kh√¥ng c√≥ quy·ªÅn x√≥a b√†i n√†y!', 'error');
                    }
                    return;
                }
                
                this.showDeleteConfirmDialog(quiz);
                
            } catch (error) {
                console.error('Error confirming delete quiz:', error);
                if (window.quizManager && window.quizManager.showToast) {
                    window.quizManager.showToast('L·ªói khi t·∫£i th√¥ng tin quiz', 'error');
                }
            }
        };
    }
    
    // ‚≠ê PATCH H√ÄM showDeleteConfirmDialog (n·∫øu ch∆∞a c√≥)
    if (!window.ExploreQuizManager.prototype.showDeleteConfirmDialog) {
        window.ExploreQuizManager.prototype.showDeleteConfirmDialog = function(quiz) {
            const dialog = document.createElement('div');
            dialog.className = 'delete-confirm-dialog';
            dialog.innerHTML = `
                <div class="delete-confirm-content">
                    <div class="delete-confirm-header">
                        <i class="fas fa-exclamation-triangle"></i>
                        <h3>X√°c Nh·∫≠n X√≥a B√†i</h3>
                    </div>
                    <div class="delete-confirm-body">
                        <p><strong>B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a b√†i n√†y?</strong></p>
                        <div class="quiz-info-preview">
                            <p><strong>T√™n b√†i:</strong> ${this.escapeHtml(quiz.title)}</p>
                            <p><strong>S·ªë c√¢u h·ªèi:</strong> ${quiz.totalQuestions} c√¢u</p>
                            <p><strong>Ng∆∞·ªùi chia s·∫ª:</strong> ${this.escapeHtml(quiz.userName)}</p>
                        </div>
                        <div class="delete-warning">
                            <i class="fas fa-info-circle"></i>
                            <p>H√†nh ƒë·ªông n√†y kh√¥ng th·ªÉ ho√†n t√°c!</p>
                        </div>
                    </div>
                    <div class="delete-confirm-footer">
                        <button class="btn btn-danger" onclick="exploreQuizManager.executeDeleteQuiz('${quiz.id}'); this.closest('.delete-confirm-dialog').remove();">
                            <i class="fas fa-trash"></i>
                            X√≥a B√†i
                        </button>
                        <button class="btn btn-secondary" onclick="this.closest('.delete-confirm-dialog').remove();">
                            <i class="fas fa-times"></i>
                            H·ªßy
                        </button>
                    </div>
                </div>
            `;
            
            const style = document.createElement('style');
            style.textContent = `
                .delete-confirm-dialog {
                    position: fixed;
                    top: 0;
                    left: 0;
                    right: 0;
                    bottom: 0;
                    background: rgba(0, 0, 0, 0.7);
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    z-index: 10000;
                    animation: fadeIn 0.3s ease-out;
                }
                .delete-confirm-content {
                    background: white;
                    border-radius: 16px;
                    max-width: 500px;
                    width: 90%;
                    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
                    animation: slideUp 0.3s ease-out;
                }
                .delete-confirm-header {
                    padding: 24px;
                    border-bottom: 1px solid #e2e8f0;
                    display: flex;
                    align-items: center;
                    gap: 12px;
                }
                .delete-confirm-header i {
                    font-size: 32px;
                    color: #f56565;
                }
                .delete-confirm-header h3 {
                    margin: 0;
                    font-size: 20px;
                    color: #2d3748;
                }
                .delete-confirm-body {
                    padding: 24px;
                }
                .delete-confirm-body > p {
                    margin: 0 0 16px 0;
                    font-size: 16px;
                    color: #2d3748;
                }
                .quiz-info-preview {
                    background: #f7fafc;
                    padding: 16px;
                    border-radius: 8px;
                    margin-bottom: 16px;
                }
                .quiz-info-preview p {
                    margin: 8px 0;
                    font-size: 14px;
                    color: #4a5568;
                }
                .delete-warning {
                    display: flex;
                    align-items: center;
                    gap: 12px;
                    padding: 12px;
                    background: #fff5f5;
                    border-left: 4px solid #f56565;
                    border-radius: 4px;
                }
                .delete-warning i {
                    color: #f56565;
                    font-size: 20px;
                }
                .delete-warning p {
                    margin: 0;
                    font-size: 14px;
                    color: #c53030;
                    font-weight: 600;
                }
                .delete-confirm-footer {
                    padding: 16px 24px;
                    border-top: 1px solid #e2e8f0;
                    display: flex;
                    gap: 12px;
                    justify-content: flex-end;
                }
                @keyframes fadeIn {
                    from { opacity: 0; }
                    to { opacity: 1; }
                }
                @keyframes slideUp {
                    from {
                        transform: translateY(20px);
                        opacity: 0;
                    }
                    to {
                        transform: translateY(0);
                        opacity: 1;
                    }
                }
                @keyframes fadeOut {
                    from { opacity: 1; transform: scale(1); }
                    to { opacity: 0; transform: scale(0.9); }
                }
            `;
            
            if (!document.querySelector('style[data-delete-dialog]')) {
                style.setAttribute('data-delete-dialog', 'true');
                document.head.appendChild(style);
            }
            
            document.body.appendChild(dialog);
        };
    }
    
    // ‚≠ê PATCH H√ÄM executeDeleteQuiz (n·∫øu ch∆∞a c√≥)
    if (!window.ExploreQuizManager.prototype.executeDeleteQuiz) {
        window.ExploreQuizManager.prototype.executeDeleteQuiz = async function(quizId) {
            try {
                if (window.quizManager && window.quizManager.showToast) {
                    window.quizManager.showToast('üóëÔ∏è ƒêang x√≥a b√†i...', 'info');
                }
                
                const result = await this.deleteSharedQuiz(quizId);
                
                if (result.success) {
                    if (window.quizManager && window.quizManager.showToast) {
                        window.quizManager.showToast(`‚úÖ ${result.message}`, 'success');
                    }
                } else {
                    throw new Error(result.message || 'Kh√¥ng th·ªÉ x√≥a b√†i');
                }
                
            } catch (error) {
                console.error('Error executing delete quiz:', error);
                if (window.quizManager && window.quizManager.showToast) {
                    window.quizManager.showToast(`‚ùå L·ªói: ${error.message}`, 'error');
                }
            }
        };
    }
    
    // ‚≠ê C·∫¨P NH·∫¨T INSTANCE HI·ªÜN T·∫†I
    if (window.exploreQuizManager) {
        // Bind l·∫°i c√°c h√†m m·ªõi v√†o instance hi·ªán t·∫°i
        window.exploreQuizManager.deleteSharedQuiz = window.ExploreQuizManager.prototype.deleteSharedQuiz.bind(window.exploreQuizManager);
        window.exploreQuizManager.confirmDeleteQuiz = window.ExploreQuizManager.prototype.confirmDeleteQuiz.bind(window.exploreQuizManager);
        window.exploreQuizManager.showDeleteConfirmDialog = window.ExploreQuizManager.prototype.showDeleteConfirmDialog.bind(window.exploreQuizManager);
        window.exploreQuizManager.executeDeleteQuiz = window.ExploreQuizManager.prototype.executeDeleteQuiz.bind(window.exploreQuizManager);
        
        console.log('‚úÖ ƒê√£ patch ExploreQuizManager instance th√†nh c√¥ng!');
    }
    
    console.log('‚úÖ Patch ho√†n t·∫•t! B√¢y gi·ªù Admin c√≥ th·ªÉ x√≥a b√†i.');
    console.log('üí° Th·ª≠ x√≥a m·ªôt b√†i ƒë·ªÉ ki·ªÉm tra.');
    
})();
